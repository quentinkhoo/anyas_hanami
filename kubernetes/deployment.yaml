apiVersion: v1
kind: Namespace
metadata:
  name: forger
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: yor-forger
  namespace: forger
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: yor-role
  namespace: forger
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spy-secrets
  namespace: forger
subjects:
  - kind: ServiceAccount
    name: yor-forger
    namespace: forger
roleRef:
  kind: Role
  name: yor-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: forger
type: Opaque
data:
  POSTGRES_PASSWORD: "YW55YXMtd2FrdS13YWt1"

---
apiVersion: v1
kind: Secret
metadata:
  name: ascenda-flag
  namespace: forger
type: Opaque
data:
  ASCENDA_FLAG: "YXNjZW5kYXtleHBsMDF0XzdoRV80cFBfNE5EX1IzN1JpM1ZlX3RoMTVfVkFMVUV9"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: forger
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: forger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:17-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "anya_production"
            - name: POSTGRES_USER
              value: "anya"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anya-math-deployment
  namespace: forger
spec:
  replicas: 2 # Run 2 pods for high availability
  selector:
    matchLabels:
      app: anya-math
  template:
    metadata:
      labels:
        app: anya-math
    spec:
      serviceAccountName: yor-forger
      volumes:
      - name: tmp
        emptyDir: {}
      initContainers:
      - name: wait-for-postgres
        image: postgres:17-alpine
        command: ['sh', '-c',
          'until pg_isready -h postgres-service -p 5432 -U anya; do
            echo "Waiting for PostgreSQL to be ready...";
            sleep 2;
          done;']
      containers:
        - name: anya-math
          image: anya-math:latest
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command: ["mkdir", "-p", "/app/tmp/temp"]
          ports:
            - containerPort: 2300
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            runAsNonRoot: true
            runAsUser: 6969
            runAsGroup: 6969
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: "RuntimeDefault"
          env:
            - name: TMPDIR
              value: "/app/tmp/temp"
            - name: HANAMI_SERVE_ASSETS
              value: "true"
            - name: HANAMI_ENV
              value: "production"
            - name: PORT
              value: "2300"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
          - mountPath: /app/tmp
            name: tmp

---
apiVersion: v1
kind: Service
metadata:
  name: anya-math-service
  namespace: forger
spec:
  type: NodePort
  selector:
    app: anya-math
  ports:
    - protocol: TCP
      port: 80
      targetPort: 2300
